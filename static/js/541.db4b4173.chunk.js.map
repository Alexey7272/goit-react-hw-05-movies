{"version":3,"file":"static/js/541.db4b4173.chunk.js","mappings":"8LAkCA,UA9Ba,WACT,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAQC,EAAR,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAKP,KAAjB,IACTQ,OAAM,SAAAC,GAAWC,QAAQC,IAAI,iBAAkBF,EAAMG,QAAS,GACjE,GAAE,CAACV,KAGA,wBACKF,EAAKa,KAAI,YAA2C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAC9B,OACI,2BACI,gBACIC,IAAG,UAAKC,EAAAA,IAAL,OAAoBF,GACvBG,IAAKL,EACLM,MAAM,WAEV,6BAAKN,EAAL,QACA,wCAAgBC,OAPXF,EAUhB,KAGZ,C,uNC7BYK,EAAe,kCACtBG,EAAW,+BACXC,EAAU,mCAEVC,EAAQ,SAKVC,EAAU,CACVC,OAAQ,CACJC,QAASJ,IAIJK,EAAiB,mCAAG,6GAEFC,EAAAA,EAAAA,IAAUP,EAdxB,sBAc6CG,GAF7B,cAEnBK,EAFmB,yBAIlBA,EAASvB,MAJS,gCAMzBG,QAAQC,IAAI,iBAAkB,KAAMC,SANX,yDAAH,qDAUjBmB,EAAY,mCAAG,WAAMjB,GAAN,iGAEGe,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OAAeE,EAAf,YAAwBV,GAAMW,GAFtC,cAEdK,EAFc,yBAIbA,EAASvB,MAJI,gCAMpBG,QAAQC,IAAI,iBAAkB,KAAMC,SANhB,yDAAH,sDAUZP,EAAe,mCAAG,WAAMS,GAAN,iGAEFe,EAAAA,EAAAA,GAAM,GAAD,OACvBP,GADuB,OACZE,EADY,YACHV,GADG,OAhClB,YAkCRW,GAJuB,cAEnBK,EAFmB,yBAOlBA,EAASvB,MAPS,gCASzBG,QAAQC,IAAI,iBAAkB,KAAMC,SATX,yDAAH,sDAafoB,EAAe,mCAAG,WAAMlB,GAAN,iGAEAe,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OAAeE,EAAf,YAAwBV,GAAxB,OA5CpB,YA4C4DW,GAF7C,cAEjBK,EAFiB,yBAIhBA,EAASvB,MAJO,gCAMvBG,QAAQC,IAAI,iBAAkB,KAAMC,SANb,yDAAH,sDAUfqB,EAAe,mCAAG,WAAMC,GAAN,gFACvBT,EAAS,CACTC,OAAQ,CACJC,QAASJ,EACTW,MAAOA,IAJY,mBASAL,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OA5DrB,iBA4D8CG,GAT9B,cASjBK,EATiB,yBAWhBA,EAASvB,MAXO,gCAavBG,QAAQC,IAAI,iBAAkB,KAAMC,SAbb,yDAAH,qD","sources":["components/Cast/Cast.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { BASE_IMG_URL, getMovieCredits } from \"services/api\";\n\nconst Cast = () => {\n    const [ cast, setCast ] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n     getMovieCredits(movieId)\n       .then(data => setCast(data.cast))\n       .catch(error => { console.log('Erroe message:', error.message)});\n    }, [movieId])\n\n    return (\n        <ul> \n            {cast.map(({ id, name, character, profile_path}) => {\n                return (\n                    <li key={id}> \n                        <img\n                            src={`${BASE_IMG_URL}${profile_path}`}\n                            alt={name}\n                            width=\"100px\"\n                        ></img> \n                        <p> {name} </p>\n                        <p> Character: {character}</p>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n};\n\n\nexport default Cast;\n","import axios from \"axios\";\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e90e5cc72f12501ca886fe4fb737b4cc';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE = '/movie';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nlet options = {\n    params: {\n        api_key: API_KEY,\n    }\n};\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(BASE_URL + TRENDING, options);\n\n        return response.data;\n    } catch (error) {\n        console.log('Error message:', error.message);\n    }\n};\n\nexport const getMovieById = async id => {\n    try {\n        const response = await axios(`${BASE_URL}${MOVIE}/${id}`, options)\n\n        return response.data\n    } catch (error) {\n        console.log('Error message:', error.message);\n    }\n};\n\nexport const getMovieCredits = async id => {\n    try {\n      const response = await axios(\n        `${BASE_URL}${MOVIE}/${id}${CREDITS}`,\n        options\n      );\n  \n      return response.data;\n    } catch (error) {\n      console.log('error.message:', error.message);\n    }\n};\n\nexport const getMovieReviews = async id => {\n    try {\n        const response = await axios(`${BASE_URL}${MOVIE}/${id}${REVIEWS}`, options)\n\n        return response.data\n    } catch (error) {\n        console.log('Error message:', error.message);\n    }\n};\n\nexport const getMovieByQuery = async query => {\n    let options ={\n        params: {\n            api_key: API_KEY,\n            query: query,\n        }\n    };\n\n    try {\n        const response = await axios(`${BASE_URL}${SEARCH}`, options)\n\n        return response.data\n    } catch (error) {\n        console.log('Error message:', error.message);\n    }\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCredits","then","data","catch","error","console","log","message","map","id","name","character","profile_path","src","BASE_IMG_URL","alt","width","BASE_URL","API_KEY","MOVIE","options","params","api_key","getTrendingMovies","axios","response","getMovieById","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}