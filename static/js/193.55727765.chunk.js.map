{"version":3,"file":"static/js/193.55727765.chunk.js","mappings":"8LAsCA,UAlCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAQC,EAAR,KAAsBC,EAAtB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,YAAgB,IAAdC,EAAa,EAAbA,QACNC,QAAQC,IAAIF,GACZJ,EAAgBI,EACjB,IACAG,OAAM,SAAAC,GACLH,QAAQC,IAAI,iBAAkBE,EAAMC,QACrC,GACN,GAAE,CAACb,KAGA,8BACyB,IAAxBG,EAAaW,QACd,wBACGX,EAAaY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,qCAAaD,EAAb,QACA,uBAAIC,MAFGF,EADO,OAQpB,sEAIP,C,uNCjCYG,EAAe,kCACtBC,EAAW,+BACXC,EAAU,mCAEVC,EAAQ,SAKVC,EAAU,CACVC,OAAQ,CACJC,QAASJ,IAIJK,EAAiB,mCAAG,6GAEFC,EAAAA,EAAAA,IAAUP,EAdxB,sBAc6CG,GAF7B,cAEnBK,EAFmB,yBAIlBA,EAASC,MAJS,gCAMzBpB,QAAQC,IAAI,iBAAkB,KAAMG,SANX,yDAAH,qDAUjBiB,EAAY,mCAAG,WAAMd,GAAN,iGAEGW,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OAAeE,EAAf,YAAwBN,GAAMO,GAFtC,cAEdK,EAFc,yBAIbA,EAASC,MAJI,gCAMpBpB,QAAQC,IAAI,iBAAkB,KAAMG,SANhB,yDAAH,sDAUZkB,EAAe,mCAAG,WAAMf,GAAN,iGAEFW,EAAAA,EAAAA,GAAM,GAAD,OACvBP,GADuB,OACZE,EADY,YACHN,GADG,OAhClB,YAkCRO,GAJuB,cAEnBK,EAFmB,yBAOlBA,EAASC,MAPS,gCASzBpB,QAAQC,IAAI,iBAAkB,KAAMG,SATX,yDAAH,sDAafP,EAAe,mCAAG,WAAMU,GAAN,iGAEAW,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OAAeE,EAAf,YAAwBN,GAAxB,OA5CpB,YA4C4DO,GAF7C,cAEjBK,EAFiB,yBAIhBA,EAASC,MAJO,gCAMvBpB,QAAQC,IAAI,iBAAkB,KAAMG,SANb,yDAAH,sDAUfmB,EAAe,mCAAG,WAAMC,GAAN,gFACvBV,EAAS,CACTC,OAAQ,CACJC,QAASJ,EACTY,MAAOA,IAJY,mBASAN,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OA5DrB,iBA4D8CG,GAT9B,cASjBK,EATiB,yBAWhBA,EAASC,MAXO,gCAavBpB,QAAQC,IAAI,iBAAkB,KAAMG,SAbb,yDAAH,qD","sources":["components/Reviews/reviews.js","services/api.js"],"sourcesContent":["import { getMovieReviews } from \"services/api\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [ movieReviews, setMovieReviews ] = useState([]);\n\n    useEffect(() => {\n        getMovieReviews(movieId)\n          .then(({results}) => {\n            console.log(results)\n            setMovieReviews(results)\n          })\n          .catch(error => {\n            console.log('Error message:', error.message)\n          })\n    }, [movieId]);\n\n    return (\n        <>\n        {movieReviews.length !== 0 ? (\n        <ul>\n          {movieReviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h5>Author: {author}.</h5>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p> We dont have any reviews for this movie </p>\n      )}\n    </>\n    )\n}\n\n\nexport default Reviews","import axios from \"axios\";\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e90e5cc72f12501ca886fe4fb737b4cc';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE = '/movie';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nlet options = {\n    params: {\n        api_key: API_KEY,\n    }\n};\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(BASE_URL + TRENDING, options);\n\n        return response.data;\n    } catch (error) {\n        console.log('Error message:', error.message);\n    }\n};\n\nexport const getMovieById = async id => {\n    try {\n        const response = await axios(`${BASE_URL}${MOVIE}/${id}`, options)\n\n        return response.data\n    } catch (error) {\n        console.log('Error message:', error.message);\n    }\n};\n\nexport const getMovieCredits = async id => {\n    try {\n      const response = await axios(\n        `${BASE_URL}${MOVIE}/${id}${CREDITS}`,\n        options\n      );\n  \n      return response.data;\n    } catch (error) {\n      console.log('error.message:', error.message);\n    }\n};\n\nexport const getMovieReviews = async id => {\n    try {\n        const response = await axios(`${BASE_URL}${MOVIE}/${id}${REVIEWS}`, options)\n\n        return response.data\n    } catch (error) {\n        console.log('Error message:', error.message);\n    }\n};\n\nexport const getMovieByQuery = async query => {\n    let options ={\n        params: {\n            api_key: API_KEY,\n            query: query,\n        }\n    };\n\n    try {\n        const response = await axios(`${BASE_URL}${SEARCH}`, options)\n\n        return response.data\n    } catch (error) {\n        console.log('Error message:', error.message);\n    }\n};\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","then","results","console","log","catch","error","message","length","map","id","author","content","BASE_IMG_URL","BASE_URL","API_KEY","MOVIE","options","params","api_key","getTrendingMovies","axios","response","data","getMovieById","getMovieCredits","getMovieByQuery","query"],"sourceRoot":""}